<?xml version="1.0"?>
<ruleset name="Reaktiv Standards">
	<description>The code standard for a Reaktiv Project.</description>

	<!-- What to scan -->
	<file>.</file>
	<exclude-pattern>*/tests/*</exclude-pattern>
	<exclude-pattern>*/dist/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>

	<!-- How to scan -->
	<arg value="sp"/> <!-- Show sniff and progress -->
	<arg name="basepath" value="."/><!-- Strip the file paths down to the relevant bit -->
	<arg name="colors" />
	<arg name="extensions" value="php"/>
	<arg name="report" value="full"/>
	<arg name="report" value="summary"/>
	<arg name="report" value="source"/>
	<arg name="parallel" value="9"/>

	<!-- Rules: WordPress Coding Standards -->
	<config name="minimum_supported_wp_version" value="6.1"/>
	<rule ref="WordPress">
		<exclude name="Generic.Arrays.DisallowShortArraySyntax.Found" />
		<exclude name="Universal.Arrays.DisallowShortArraySyntax.Found" />
		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>
		<exclude name="WordPress.VIP.RestrictedFunctions.user_meta_get_user_meta"/>
		<exclude name="WordPress.VIP.RestrictedFunctions.user_meta_update_user_meta"/>
		<exclude name="WordPress.VIP.RestrictedFunctions.user_meta_delete_user_meta"/>
		<exclude name="WordPress.Files.FileName.InvalidClassFileName"/>
		<exclude name="WordPress.PHP.DisallowShortTernary.Found"/>
		<exclude name="Universal.Operators.DisallowShortTernary.Found"/>
	</rule>
	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<property name="prefixes" type="array" value="rkv"/>
		</properties>
	</rule>
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array" value="rkv-guide"/>
		</properties>
	</rule>
	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_check" value="true"/>
		</properties>
	</rule>
	<!-- Check code for cross-version PHP compatibility. -->
	<config name="testVersion" value="8.1"/>
	<rule ref="PHPCompatibility">
		<!-- Exclude PHP constants back-filled by PHPCS. -->
		<exclude name="PHPCompatibility.PHP.NewConstants.t_finallyFound"/>
		<exclude name="PHPCompatibility.PHP.NewConstants.t_yieldFound"/>
		<exclude name="PHPCompatibility.PHP.NewConstants.t_ellipsisFound"/>
		<exclude name="PHPCompatibility.PHP.NewConstants.t_powFound"/>
		<exclude name="PHPCompatibility.PHP.NewConstants.t_pow_equalFound"/>
		<exclude name="PHPCompatibility.PHP.NewConstants.t_spaceshipFound"/>
		<exclude name="PHPCompatibility.PHP.NewConstants.t_coalesceFound"/>
		<exclude name="PHPCompatibility.PHP.NewConstants.t_coalesce_equalFound"/>
		<exclude name="PHPCompatibility.PHP.NewConstants.t_yield_fromFound"/>

		<!-- Unclear how, but appears to be back-filled anyhow, could be that PHP did so before the token was in use. -->
		<exclude name="PHPCompatibility.PHP.NewConstants.t_traitFound"/>
	</rule>
	<rule ref="WordPress-VIP-Go" />
</ruleset>
